 Server Code Breakdown (Documentation)
==========================================

What is the purpose of this program?
------------------------------------------------------------------------
This is a CLI implementaiton of a basic TCP chat server
The server is reponsible for:
- Listening for client connections using a specific port (I have used 2025)
- Accept multiple clients using a seperate thread for each one
- Read a message from a client
- Echo the message back to the client

Components
------------------------------------------------------------------------
There are two key components that I need to understand:
The Listener and the List of all the clients

TcpListener listener
- This is reponsible for listening to incoming requests
- Itâ€™s started in Start_Server() using listener.Start()

List<TcpClient> clients
- A list to store all currently connected clients
- This is needed if I later want to broadcast messages to all connected clients


Functions - What do they do?
------------------------------------------------------------------------

Start_Server(int port) - takes the communication port as a paramter

- Initialises the TcpListener on a given port
- Starts the listener and prints received messages to the console
- Starts a new thread to accept different clients 

Accept_Clients() - doesn't take any parameters

- Uses a flag to make sure that the server continously accepts connections
- When a client does eventually connect:
    - The client is added to the list of clients
    - The client handler method Handle_Client() is called


Handle_Client(TcpClient client) - takes the client object as a parameter

- Sends a welcome message when the client connects
- Enters a loop to:
    - Read lines sent by the client using the StreamReader
    - Print the received message to the server console using StreamWriter
    - Echo the message back to the client

- In case of an error, the client disconnects
- Finally:
    - The connection and stream is closed
    - Removes the client from the list of current clients
    - Logs the disconnection by the client


Main()
- Entry point
- Instantiates the server
- Starts it on port 2025

